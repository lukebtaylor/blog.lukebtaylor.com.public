<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>certificate on Luke's blog site</title><link>https://blog.lukebtaylor.com/tags/certificate/</link><description>Recent content in certificate on Luke's blog site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 08 Feb 2018 18:46:14 -0600</lastBuildDate><atom:link href="https://blog.lukebtaylor.com/tags/certificate/index.xml" rel="self" type="application/rss+xml"/><item><title>Yubikey - Silently Enroll PIV Using Certreq</title><link>https://blog.lukebtaylor.com/posts/yubikey-silently-enroll-piv-using-certreq/</link><pubDate>Thu, 08 Feb 2018 18:46:14 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/yubikey-silently-enroll-piv-using-certreq/</guid><description>Yubikey - Silently enroll PIV using certreq This will allow a Yubikey to be silently enrolled for a CA cert from AD without user intervention. Of course, we would want to prompt a user for their PIN first, then use that for the enrollment.
Additionally, the default PUK and Management key should be changed.
REM This method required the Yubico MiniDriver to be installed on the enrollment station REM To do this silently, ensure that the Certificate Template is set to &amp;#34;Enroll subject without requiring any user input&amp;#34; on the &amp;#34;Request Handling&amp;#34; tab of the Certificate Template&amp;#39;s Properties.</description></item><item><title>Powershell - Update a certificate friendly name</title><link>https://blog.lukebtaylor.com/posts/powershell-update-a-certificate-friendly-name/</link><pubDate>Wed, 25 Oct 2017 22:18:24 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/powershell-update-a-certificate-friendly-name/</guid><description>function Legacy-UpdateFriendlyName { param( [parameter(Mandatory = $true, ValueFromPipeLine= $true)] [string]$Name, [parameter(Mandatory = $true)] [string]$FriendlyName, [ValidateSet(&amp;#34;FindByThumbprint&amp;#34;, &amp;#34;FindBySubjectName&amp;#34;, &amp;#34;FindBySubjectDistinguishedName&amp;#34;, &amp;#34;FindByIssuerName&amp;#34;, &amp;#34;FindByIssuerDistinguishedName&amp;#34;, &amp;#34;FindBySerialNumber&amp;#34;, &amp;#34;FindByTimeValid&amp;#34;, &amp;#34;FindByTimeNotYetValid&amp;#34;, &amp;#34;FindByTimeExpired&amp;#34;, &amp;#34;FindByTemplateName&amp;#34;, &amp;#34;FindByApplicationPolicy&amp;#34;, &amp;#34;FindByCertificatePolicy&amp;#34;, &amp;#34;FindByExtension&amp;#34;, &amp;#34;FindByKeyUsage&amp;#34;, &amp;#34;FindBySubjectKeyIdentifier&amp;#34;)] [string]$Type = &amp;#34;FindByThumbprint&amp;#34; ) $store = New-Object System.Security.Cryptography.X509Certificates.X509Store $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]::MaxAllowed) Try { $certificates = $store.Certificates.Find($type,$name,$false) if( -not([string]::IsNullOrEmpty($certificates)) ) { foreach($cert in $certificates) { $cert.FriendlyName = $FriendlyName # + &amp;#34; - &amp;#34; + $cert.Subject #$cert } } else { Write-Warning &amp;#34;No Certificates found&amp;#34; } } Catch { $error[0] } $store.</description></item><item><title>SSH - Secure VPS With Certificate</title><link>https://blog.lukebtaylor.com/posts/ssh-secure-vps-with-certificate/</link><pubDate>Sun, 15 Oct 2017 22:18:46 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/ssh-secure-vps-with-certificate/</guid><description>Secure VPS with Certificate SSH Generate a new key on the machine that is to access the VPS ssh-keygen -a 1000 -b 4096 -C &amp;#34;&amp;#34; -o -t rsa or
ssh-keygen -a 1000 -C &amp;#34;&amp;#34; -o -t ed25519 -a specifies # of KDF rounds -b specifies the bit size for RSA keys -C removes the common comment at the end of the key -o specifies that we should use the new format provided by OpenSSH -t specifies the key type (RSA) Copy key to the VPS Copy the public key to the VPS</description></item></channel></rss>