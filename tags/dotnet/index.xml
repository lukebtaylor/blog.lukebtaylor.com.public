<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dotnet on Luke's blog site</title><link>https://blog.lukebtaylor.com/tags/dotnet/</link><description>Recent content in dotnet on Luke's blog site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 25 Oct 2017 22:10:28 -0600</lastBuildDate><atom:link href="https://blog.lukebtaylor.com/tags/dotnet/index.xml" rel="self" type="application/rss+xml"/><item><title>DNC - No executable found matching command “dotnet-bundle” during WebDeploy for ASP.NET Core</title><link>https://blog.lukebtaylor.com/posts/dnc-no-executable-found-matching-command-dotnet-bundle-during-webdeploy-for-asp.net-core/</link><pubDate>Wed, 25 Oct 2017 22:10:28 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/dnc-no-executable-found-matching-command-dotnet-bundle-during-webdeploy-for-asp.net-core/</guid><description>In tools section of Project.json add this-
&amp;#34;tools&amp;#34;: { &amp;#34;BundlerMinifier.Core&amp;#34;: &amp;#34;2.2.281&amp;#34;, ....</description></item><item><title>dotnet - Get All Active Directory Users in a Group</title><link>https://blog.lukebtaylor.com/posts/dotnet-get-all-active-directory-users-in-group/</link><pubDate>Thu, 21 Jul 2016 22:11:44 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/dotnet-get-all-active-directory-users-in-group/</guid><description>Use the following handy method to get all users in an AD group .NET 3.5
Add a reference to
System.DirectoryServices.AccountManagement public static List&amp;lt;UserPrincipal&amp;gt; GetAllUsersInGroup(string domain, string groupname) { List&amp;lt;UserPrincipal&amp;gt; result = new List&amp;lt;UserPrincipal&amp;gt;(); using (var context = new PrincipalContext(ContextType.Domain, domain)) using (var group = GroupPrincipal.FindByIdentity(context, groupname)) { if (group != null) { result.AddRange(group.GetMembers(true).Cast&amp;lt;UserPrincipal&amp;gt;().ToList()); } } return result; } private static string GetADStatus(int inputField) { // Assume the user is disabled string result = &amp;#34;Disabled&amp;#34;; // Declare the hex for the accountDisabled flag int accountDisabled = 0x00000002; // https://msdn.</description></item><item><title>dotnet - Read a .csv in .NET</title><link>https://blog.lukebtaylor.com/posts/dotnet-read-a-.csv-in-.net/</link><pubDate>Thu, 07 Jul 2016 22:11:44 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/dotnet-read-a-.csv-in-.net/</guid><description>// Namespace: Microsoft.VisualBasic.FileIO // https://msdn.microsoft.com/en-us/library/microsoft.visualbasic.fileio.textfieldparser%28v=vs.110%29.aspx // Assembly: Microsoft.VisualBasic (in Microsoft.VisualBasic.dll) private static List&amp;lt;SourceDocument&amp;gt; ReadCSV(string p) { List&amp;lt;SourceDocument&amp;gt; docs = new List&amp;lt;SourceDocument&amp;gt;(); using (TextFieldParser parser = new TextFieldParser(p)) { parser.TextFieldType = FieldType.Delimited; parser.SetDelimiters(&amp;#34;,&amp;#34;); while (!parser.EndOfData) { //Processing row string[] fields = parser.ReadFields(); if (fields[0].Trim().ToUpper() != &amp;#34;HEADER1NAME&amp;#34;) { SourceDocument doc = new SourceDocument(); doc.StringField = fields[0].Trim(); doc.IntField = Convert.ToInt32(fields[1]); doc.DateField = Convert.ToDateTime(fields[2]); docs.Add(doc); } } } return docs; }</description></item><item><title>dotnet - Task Patterns</title><link>https://blog.lukebtaylor.com/posts/dotnet-task-patterns/</link><pubDate>Thu, 07 Jul 2016 22:10:28 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/dotnet-task-patterns/</guid><description>Tasks
Get The Number of Logical Cores var logicalCoreCount = Environment.ProcessorCount; Wait All One By One List &amp;lt; Task &amp;lt;TResult&amp;gt;&amp;gt; tasks = new List &amp;lt; Task&amp;lt;TResult&amp;gt;&amp;gt; (); for (int i = 0; i &amp;lt; N; i++) // Start N tasks: { tasks.Add( Task.Factory.StartNew&amp;lt;TResult&amp;gt; (code) ); } while (tasks.Count &amp;gt; 0) { // Get the array index of the task that finishes first int index = Task.WaitAny( tasks.ToArray() ); // This will never throw an exception here // Catch the exception like this try { tasks[index].</description></item><item><title>dotnet - Enumerating a Registry Key Results in a Null Value</title><link>https://blog.lukebtaylor.com/posts/dotnet-enumerating-a-registry-key-results-in-a-null-value/</link><pubDate>Mon, 15 Feb 2016 22:11:16 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/dotnet-enumerating-a-registry-key-results-in-a-null-value/</guid><description>This post assumes .NET 4.0
After trying for some time to get a registry key to list all of its subkeys, I kept getting a null value back.
This code does not work It always returns null.
var keyName = @&amp;#34;SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileGuid&amp;#34;; using (var guidSet = Registry.LocalMachine.OpenSubKey(keyName)) { if (guidSet != null) { foreach (var guid in guidSet.GetSubKeyNames()) { result.Add(guid); Console.WriteLine(&amp;#34;{0}&amp;#34;, guid); } } } This code works
var keyName = @&amp;#34;SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileGuid&amp;#34;; using (var hklm = RegistryKey.</description></item><item><title>Bootstrap - Adding a Bootstrap Datepicker With the Eternicode Package to an MVC Project</title><link>https://blog.lukebtaylor.com/posts/bootstrap-adding-a-bootstrap-datepicker-with-the-eternicode-package-to-an-mvc-project/</link><pubDate>Sun, 15 Feb 2015 22:16:30 -0600</pubDate><guid>https://blog.lukebtaylor.com/posts/bootstrap-adding-a-bootstrap-datepicker-with-the-eternicode-package-to-an-mvc-project/</guid><description>Manage Nuget Packages
Search for and install the Eternicode Bootstrap Datepicker https://github.com/eternicode/bootstrap-datepicker
In the BundleConfig.cshtml bundles.Add(new ScriptBundle(&amp;#34;~/bundles/bootstrap-datepicker&amp;#34;).Include( &amp;#34;~/Scripts/bootstrap-datepicker.js&amp;#34;)); //added for bootstrap datepicker bundles.Add(new StyleBundle(&amp;#34;~/Content/css&amp;#34;).Include( &amp;#34;~/Content/bootstrap.css&amp;#34;, &amp;#34;~/Content/site.css&amp;#34;, &amp;#34;~/Content/datepicker.css&amp;#34; //added for bootstrap datepicker )); In the shared view _Layout.cshtml make the following changes to the head section @*Scripts moved up to the head section so that they render before the body*@ @Styles.Render(&amp;#34;~/Content/css&amp;#34;) @Scripts.Render(&amp;#34;~/bundles/modernizr&amp;#34;) @Scripts.Render(&amp;#34;~/bundles/jquery&amp;#34;) @Scripts.Render(&amp;#34;~/bundles/jqueryval&amp;#34;) @*for jquery validation*@ @Scripts.Render(&amp;#34;~/bundles/bootstrap&amp;#34;) @Scripts.Render(&amp;#34;~/bundles/bootstrap-datepicker&amp;#34;) @*for bootstrap datepicker*@ @*Script section for bootstrap datepicker*@ &amp;lt;script&amp;gt; var datepicker = $.</description></item></channel></rss>